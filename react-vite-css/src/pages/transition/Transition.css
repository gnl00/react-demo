#box {
    /* transition: property duration timing-function delay;
     property 规定设置过渡效果的 CSS 属性的名称
     duration 规定完成过渡效果需要多少秒或毫秒
     transition-timing-function	规定速度效果的速度曲线
     delay 定义过渡效果何时开始
     */
    /* transition 过渡动画 transform 动画类型为变形 动画从开始到结束持续时间为 2s 动画速度效果曲线 ease-in 动画延迟 0.5s 生效  */
    transition: transform 1s ease-in .5s;
}

#box:hover {
    /* 定义 transform 的形式 */
    transform: rotate(180deg) scale(.5, .5);
}

#box-ani {
    /* animation: name duration timing-function delay iteration-count direction play-state fill-mode;
    name    用来调用@keyframes定义好的动画，与@keyframes定义的动画名称一致
    duration	指定元素播放动画所持续的时间
    timing-function	规定速度效果的速度曲线，是针对每一个小动画所在时间范围的变换速率
    delay	定义在浏览器开始执行动画之前等待的时间，值整个animation执行之前等待的时间
    iteration-count	定义动画的播放次数，可选具体次数或者无限（infinite）
    direction	设置动画播放方向：normal(按时间轴顺序),reverse(时间轴反方向运行),alternate(轮流，即来回往复进行),alternate-reverse(动画先反运行再正方向运行，并持续交替运行)
    play-state	控制元素动画的播放状态，通过此来控制动画的暂停和继续，两个值：running(继续)，paused(暂停)
    fill-mode   控制动画结束后，元素的样式，有四个值：none(回到动画没开始时的状态)，forwards(动画结束后动画停留在结束状态)，backwords(动画回到第一帧的状态)，both(根据animation-direction轮流应用forwards和backwards规则)，注意与iteration-count不要冲突(动画执行无限次)

    */
    animation: myAnimation 1s ease-in-out .5s infinite alternate running forwards;
}

@keyframes myAnimation {
    10% {
        background: green;
    }

    50% {
        width: 100px;
    }

    70% {
        border: 15px solid black;
    }

    100% {
        width: 150px;
        height: 150px;
    }
}

#box-ani:hover {
    animation-play-state: paused;
}

#circle {
    transition-duration: 1s;
}

#circle:hover {
    height: 200px;
    width: 200px;
}

#circleAni {
    animation: circleAnimation 1s ease-in-out 1s infinite alternate running forwards;
}

#circleAni:hover {
    animation-play-state: paused;
}

@keyframes circleAnimation {
    50% {
        height: 150px;
        width: 150px;
    }
}